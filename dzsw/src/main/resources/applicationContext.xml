<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
 http://www.springframework.org/schema/beans
 https://www.springframework.org/schema/beans/spring-beans.xsd
 http://www.springframework.org/schema/tx
 https://www.springframework.org/schema/tx/spring-tx.xsd
 http://www.springframework.org/schema/context
 https://www.springframework.org/schema/context/spring-context.xsd
 http://www.springframework.org/schema/aop
 https://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- 使用 context 命名空间通过spring扫描指定base-package以及子包下的实现类，进行注解解析 -->
	<!-- <context:component-scan base-package="com.demo"></context:component-scan> -->
	<context:component-scan
		base-package="com.demo.service"></context:component-scan>
	<context:component-scan
		base-package="com.demo.controller"></context:component-scan>
	<!-- 启用基于注解的aspectJ支持 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<context:property-placeholder
		location="classpath:jdbc.properties" />
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 最大链接数量 -->
		<!-- <property name="maxTotal" value="30"></property> 最大空闲数量 <property 
			name="maxIdle" value="10"></property> 初始化连接数 <property name="initialSize" 
			value="5"></property> -->
	</bean>
	<!-- mybatis-spring -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
	</bean>
	<!-- mapper 代理开发，spring 自动扫描Mybatis接口并装配 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.demo.dao"></property>
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory"></property>

	</bean>
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- org.springframework.orm.hibernate3.HibernateTransactionManager org.springframework.jdbc.datasource.DataSourceTransactionManager -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"></property>
	</bean>
	<!-- 声明事务 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="*" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 定义切入点 -->
		<aop:pointcut
			expression="execution(* com.demo.dao.service.*.*(..))"
			id="txPointCut" />
		<!-- 切面：将切面于通知关联 -->
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="txPointCut" />
	</aop:config>
	<!-- 为事务管理器注册注解驱动器 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<import resource="spring-security.xml"></import>
</beans>